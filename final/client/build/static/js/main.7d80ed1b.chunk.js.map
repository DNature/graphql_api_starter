{"version":3,"sources":["theme/palette.js","theme/index.js","Layout/Main/components/Topbar/index.js","Layout/Main/index.js","Layout/Minimal/components/Topbar/index.js","Layout/Minimal/index.js","pages/Home/components/Files.js","pages/Home/UploadForm.js","pages/Home/components/hooks.js","pages/Home/index.js","Routes.js","App.js","ApolloProvider.js","serviceWorker.js","index.js"],"names":["white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","theme","createMuiTheme","palette","withStyles","root","boxShadow","logo","color","props","classes","className","rest","AppBar","clsx","position","Toolbar","to","Typography","variant","paddingTop","spacing","height","content","children","UPLOADS_QUERY","gql","avatar","media","marginTop","data","useQuery","singleFile","console","log","Container","maxWidth","key","_id","Card","CardHeader","Avatar","aria-label","filename","title","mimetype","CardMedia","image","path","Button","component","href","target","CardContent","varian","Divider","download","UploadForm","onUpload","ref","useRef","useState","drag","setDrag","onDragOver","val","e","preventDefault","onDrop","stopPropagation","dataTransfer","files","length","onChange","DropBox","onDragEnter","onDragLeave","HiddenInput","type","style","display","onClick","current","click","useFileDrop","file","addIcon","cursor","container","marginBottom","Routes","exact","MainLayout","history","createBrowserHistory","themefile","App","httpLink","createUploadLink","ssrMode","uri","credentials","client","ApolloClient","cache","InMemoryCache","Boolean","window","location","hostname","match","ReactDOM","render","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d80ed1b.chunk.js","sourcesContent":["import { colors } from \"@material-ui/core\";\n\nconst white = \"#FFFFFF\";\nconst black = \"#000000\";\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[\"A400\"],\n    light: colors.blue[\"A400\"]\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: \"#F4F6F8\",\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nimport palette from \"./palette\";\n\nconst theme = createMuiTheme({\n  palette,\n  theme: {}\n});\nexport default theme;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Toolbar, withStyles, Typography } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  ...theme.theme,\n  root: {\n    boxShadow: \"none\"\n  },\n  logo: {\n    color: \"white\"\n  }\n});\n\nconst Topbar = props => {\n  const { classes, className, ...rest } = props;\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\" className={classes.logo}>\n          <Typography variant=\"h4\" className={classes.logo}>\n            Hello\n          </Typography>\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\nTopbar.propTypes = {\n  className: PropTypes.string\n};\nexport default withStyles(styles)(Topbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport { Topbar } from \"./components\";\n\nconst styles = theme => ({\n  ...theme.theme,\n  root: {\n    paddingTop: theme.spacing(10),\n    height: \"100%\"\n  },\n  content: {\n    height: \"100%\"\n  }\n});\n\nconst Main = props => {\n  const { classes, children } = props;\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default withStyles(styles)(Main);\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Toolbar, withStyles, Typography } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  ...theme.theme,\n  root: {\n    boxShadow: \"none\"\n  }\n});\n\nconst Topbar = props => {\n  const { classes, className, ...rest } = props;\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\" className={classes.logo}>\n          <Typography variant=\"h3\" color=\"inherit\">\n            Hello APP\n          </Typography>\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withStyles(styles)(Topbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport { Topbar } from \"./components\";\n\nconst styles = theme => ({\n  ...theme.theme,\n  root: {\n    paddingTop: theme.spacing(50),\n    height: \"100%\"\n  },\n  content: {\n    height: \"100%\"\n  }\n});\n\nconst Minimal = props => {\n  const { classes, children } = props;\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default withStyles(styles)(Minimal);\n","import React, { useState, useEffect } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Container,\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  Avatar,\n  Divider,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst UPLOADS_QUERY = gql`\n  query singleFile {\n    singleFile(fileId: \"5dd3c57f62d69e5387a099c3\") {\n      id\n      path\n      description\n      user\n      filename\n      mimetype\n    }\n  }\n`;\n\nconst styles = theme => ({\n  ...theme.theme,\n  avatar: {\n    background: theme.palette.primary.main\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  divider: {\n    marginTop: theme.spacing(3)\n  }\n});\n\nconst Files = props => {\n  const { classes } = props;\n  const { data } = useQuery(UPLOADS_QUERY);\n  if (data) {\n    const singleFile = data.singleFile;\n    console.log(singleFile);\n\n    return (\n      <>\n        {singleFile && (\n          <Container maxWidth=\"sm\" key={singleFile._id}>\n            <Card>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {singleFile.filename}\n                  </Avatar>\n                }\n                title={singleFile.filename}\n              />\n              {singleFile.mimetype === \"image/jpg\" ||\n              singleFile.mimetype === \"image/png\" ||\n              singleFile.mimetype === \"image/jpeg\" ||\n              singleFile.mimetype === \"image/gif\" ? (\n                <CardMedia\n                  className={classes.media}\n                  image={singleFile.path}\n                  title={singleFile.filename}\n                />\n              ) : (\n                <Container>\n                  <Button\n                    component=\"a\"\n                    href={singleFile.path}\n                    target=\"_black\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Download\n                  </Button>\n                </Container>\n              )}\n              <CardContent>\n                <Typography variant=\"body2\" component=\"p\">\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Quae\n                  enim suscipit illum eos iste assumenda soluta iusto voluptate.\n                  Dicta pariatur atque consectetur dignissimos architecto\n                  ducimus minima fuga veniam quae aliquid.\n                </Typography>\n                <Button\n                  component=\"a\"\n                  href={singleFile.path}\n                  varian=\"outlined\"\n                  color=\"primary\"\n                  target=\"_blank\"\n                >\n                  Download\n                </Button>\n              </CardContent>\n            </Card>\n            <Divider className={classes.divider} />\n          </Container>\n        )}\n        <a href={singleFile.path} download>\n          download\n        </a>\n      </>\n    );\n  } else return <h1>hello</h1>;\n};\n\nexport default withStyles(styles)(Files);\n\n/*{getFiles &&\n        getFiles.map(file => (\n          <Container maxWidth=\"sm\" key={file._id}>\n            <Card>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {file.filename[0]}\n                  </Avatar>\n                }\n                title={file.filename}\n              />\n              {file.mimetype === 'image/jpg' ||\n              file.mimetype === 'image/png' ||\n              file.mimetype === 'image/jpeg' ||\n              file.mimetype === 'image/gif' ? (\n                <CardMedia\n                  className={classes.media}\n                  image={file.path}\n                  title={file.filename}\n                />\n              ) : (\n                <Container>\n                  <Button\n                    component=\"a\"\n                    href={file.path}\n                    target=\"_black\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Download\n                  </Button>\n                </Container>\n              )}\n              <CardContent>\n                <Typography variant=\"body2\" component=\"p\">\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Quae\n                  enim suscipit illum eos iste assumenda soluta iusto voluptate.\n                  Dicta pariatur atque consectetur dignissimos architecto\n                  ducimus minima fuga veniam quae aliquid.\n                </Typography>\n              </CardContent>\n            </Card>\n            <Divider className={classes.divider} />\n          </Container>\n        ))}\n        */\n","import React from \"react\";\nimport { useFileDrop } from \"./components/hooks\";\n\nconst UploadForm = ({ onUpload }) => {\n  const { DropBox, HiddenInput, onClick, drag } = useFileDrop(onUpload);\n  return (\n    <div>\n      <HiddenInput />\n      <DropBox className={`upload-box ${drag ? \"drag\" : \"\"}`}>\n        <div>Dop files to upload</div>\n      </DropBox>\n      <button onClick={onClick}>Upload file</button>\n    </div>\n  );\n};\n\nexport default UploadForm;\n","import React, { useRef, useState } from \"react\";\n\nexport const useFileDrop = onUpload => {\n  const ref = useRef(null);\n  const [drag, setDrag] = useState(false);\n  const onDragOver = val => e => {\n    e.preventDefault();\n    setDrag(val);\n  };\n  const onDrop = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      onUpload(e.dataTransfer.files[0]);\n    }\n    setDrag(false);\n  };\n  const onChange = e => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      onUpload(files[0]);\n    }\n  };\n  const onClick = () => {\n    ref.current.click();\n  };\n  const HiddenInput = () => (\n    <input\n      type=\"file\"\n      style={{ display: \"none\" }}\n      onChange={onChange}\n      ref={ref}\n    />\n  );\n  const DropBox = props => (\n    <div\n      onDragEnter={onDragOver(true)}\n      onDragLeave={onDragOver(false)}\n      onDragOver={onDragOver(true)}\n      onDrop={onDrop}\n      {...props}\n    >\n      {!drag && props.children}\n    </div>\n  );\n  return {\n    DropBox,\n    HiddenInput,\n    onClick,\n    drag\n  };\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n// import { DropzoneArea, DropzoneDialog } from 'material-ui-dropzone';\nimport { withStyles, Container } from \"@material-ui/core\";\n\nimport Files from \"./components/Files\";\nimport UploadForm from \"./UploadForm\";\n\nconst styles = theme => ({\n  ...theme.theme,\n  addIcon: {\n    cursor: \"pointer\"\n  },\n  container: {\n    marginBottom: theme.spacing(5)\n  }\n});\n\nconst Home = props => {\n  const { classes } = props;\n\n  // const apolloClient = useApolloClient();\n  // const [uploadFileMutation] = useMutation(UPLOAD_FILE);\n  // const onChange = ({\n  //   target: {\n  //     validity,\n  //     files: [file]\n  //   }\n  // }) => {\n  //   // validity.valid &&\n  //   console.log(file);\n  //   uploadFileMutation({ variables: { file } }).then(() => {\n  //     apolloClient.resetStore();\n  //   });\n  // };\n\n  return (\n    <>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <UploadForm onUpload={onUpload} />\n        {/* TODO: <input type=\"file\" required onChange={onChange} /> */}\n      </Container>\n\n      <div>\n        <Files />\n      </div>\n    </>\n  );\n};\n\nconst onUpload = file => console.log(file);\nconst UPLOAD_FILE = gql`\n  mutation uploadFile($file: Upload!) {\n    uploadFile(file: $file) {\n      _id\n      filename\n    }\n  }\n`;\n\nexport default withStyles(styles)(Home);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { Main as MainLayout } from \"./Layout\";\n\nimport { Home } from \"./pages\";\nimport UploadForm from \"./pages/Home/UploadForm\";\n\nconst Routes = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={MainLayout}>\n          <MainLayout />\n          <Home />\n        </Route>\n        <Route path=\"/files\" exact component={MainLayout}>\n          <MainLayout />\n          <UploadForm />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Router, useHistory } from \"react-router-dom\";\n\n//? Material UI\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport themefile from \"./theme\";\nimport { createBrowserHistory } from \"history\";\n\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nconst history = createBrowserHistory();\nconst theme = createMuiTheme(themefile);\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router history={history}>\n        <Routes />\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createUploadLink({\n  ssrMode: true,\n  uri: \"http://localhost:4000/graphql\",\n  credentials: \"same-origin\"\n});\n\n/*\nTODO: Authorization Headers\nconst authLink = setContext(()=> {\n    const token = localStorage.getItem(\"jwtToken\");\n    return {\n        headers: {\n            Authorization: token && `Bearer ${token}`\n        }\n    }\n})\n*/\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport ApolloProvider from './ApolloProvider';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}